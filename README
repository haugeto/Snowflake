Snowflake Minimalistic Java MVC
-------------------------------
Some of us are stuck with Java, for good or bad reasons. Writing web applications with the Java EE standards can be tedious and requires a lot of paradigm shifting. From Java code to XML to JSP and back to Java. Et cetera.

Snowflake is an attempt to cut away all the nice features of rich MVC frameworks. Instead we want to make it as easy as possible to get you in to, and keep you in high productivity flow. At the end of the day, we would like you to tell us that we made a small contribution to your successful implementation of business rescuing software. The lean way.

The first version of Snowflake is still under development, but basic functionality is up and running. Now we need users that can provide us with feedback: To bring Snowflake forward we are completely dependent on learning from your experiences with using the framework. 

Snowflake uses an internal web server, based on the simple, built in HTTP server in Java 6. This gives short startup time and it eliminates the need for XML config files. Snowflake has been designed to make it possible to write a "SnowflakeServlet" that in the future would make it possible to put Snowflake based applications into production on Java Web containers such as Jetty, Tomcat or JBoss.

We're inspired by Ruby on Rails and Python Django. We've tried to avoid being influenced by MVC frameworks like Struts, Spring MVC and Wicket. Not because we don't like them, but rather because we'd like to see what happens if we move in another direction.

To get started using Snowflake, take a look at the example application called "shoppingassistant". When running the application, make sure to choose "view source" in your browser.

You will need Maven to build Snowflake and download dependencies. Snowflake uses Java 6.

For more elaborate information about using Snowflake, please consult the wiki:
http://wiki.github.com/haugeto/Snowflake/

